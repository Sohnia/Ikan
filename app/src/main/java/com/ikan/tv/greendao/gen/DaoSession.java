package com.ikan.tv.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ikan.tv.dao.db.HistoryDb;
import com.ikan.tv.dao.db.SearchHistoryDb;
import com.ikan.tv.dao.db.SourceDb;
import com.ikan.tv.dao.db.StoreDb;

import com.ikan.tv.greendao.gen.HistoryDbDao;
import com.ikan.tv.greendao.gen.SearchHistoryDbDao;
import com.ikan.tv.greendao.gen.SourceDbDao;
import com.ikan.tv.greendao.gen.StoreDbDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig historyDbDaoConfig;
    private final DaoConfig searchHistoryDbDaoConfig;
    private final DaoConfig sourceDbDaoConfig;
    private final DaoConfig storeDbDaoConfig;

    private final HistoryDbDao historyDbDao;
    private final SearchHistoryDbDao searchHistoryDbDao;
    private final SourceDbDao sourceDbDao;
    private final StoreDbDao storeDbDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        historyDbDaoConfig = daoConfigMap.get(HistoryDbDao.class).clone();
        historyDbDaoConfig.initIdentityScope(type);

        searchHistoryDbDaoConfig = daoConfigMap.get(SearchHistoryDbDao.class).clone();
        searchHistoryDbDaoConfig.initIdentityScope(type);

        sourceDbDaoConfig = daoConfigMap.get(SourceDbDao.class).clone();
        sourceDbDaoConfig.initIdentityScope(type);

        storeDbDaoConfig = daoConfigMap.get(StoreDbDao.class).clone();
        storeDbDaoConfig.initIdentityScope(type);

        historyDbDao = new HistoryDbDao(historyDbDaoConfig, this);
        searchHistoryDbDao = new SearchHistoryDbDao(searchHistoryDbDaoConfig, this);
        sourceDbDao = new SourceDbDao(sourceDbDaoConfig, this);
        storeDbDao = new StoreDbDao(storeDbDaoConfig, this);

        registerDao(HistoryDb.class, historyDbDao);
        registerDao(SearchHistoryDb.class, searchHistoryDbDao);
        registerDao(SourceDb.class, sourceDbDao);
        registerDao(StoreDb.class, storeDbDao);
    }
    
    public void clear() {
        historyDbDaoConfig.clearIdentityScope();
        searchHistoryDbDaoConfig.clearIdentityScope();
        sourceDbDaoConfig.clearIdentityScope();
        storeDbDaoConfig.clearIdentityScope();
    }

    public HistoryDbDao getHistoryDbDao() {
        return historyDbDao;
    }

    public SearchHistoryDbDao getSearchHistoryDbDao() {
        return searchHistoryDbDao;
    }

    public SourceDbDao getSourceDbDao() {
        return sourceDbDao;
    }

    public StoreDbDao getStoreDbDao() {
        return storeDbDao;
    }

}
